tasks.whenTaskAdded { task ->
    if (task.name.contains('signMavenJavaPublication')) {
        task.enabled = isMavenSignTaskEnabled()
    }
}

publishing {
    repositories {
        maven {
            url = version.endsWith('SNAPSHOT') ? REPOSITORY_URL_SNAPSHOT : REPOSITORY_URL_RELEASE
            credentials {
                username getRepositoryUsername()
                password getRepositoryPassword()
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = POM_NAME
                description = POM_DESCRIPTION
                url = GIT_URL

                scm {
                    connection = GIT_SCM_CONNECTION
                    developerConnection = GIT_SCM_CONNECTION
                    url = GIT_URL
                }
                licenses {
                    license {
                        name = LICENSE_NAME
                        url = LICENSE_URL
                    }
                }
                developers {
                    developer {
                        name = DEVELOPER_NAME
                        email = DEVELOPER_EMAIL
                    }
                }
            }
        }
    }

    signing {
        if (hasMavenGpgPrivateKey) {
            def signingKeyId = project.property('signing.keyId') as String
            def signingPassword = project.property("signing.password") as String
            def signingKey = getMavenGpgPrivateKey()
            useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
        }
        sign publishing.publications.mavenJava
    }
}
